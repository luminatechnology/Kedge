//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace Kedge.ws.AgentflowWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AgentflowWebSoapBinding", Namespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
    public partial class AgentflowWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback clearCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SQLloadValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPASEProcessOfMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback addInfoLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback addErrLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback setGlobalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getServerTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePassword1OperationCompleted;
        
        private System.Threading.SendOrPostCallback pickQueueTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback bypassTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback forceReassignTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback notifyTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRootTaskOfJoinMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskOfMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskOfRootTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetDeputyAndDeputyStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback resetMemberDelegationOperationCompleted;
        
        private System.Threading.SendOrPostCallback getGlobalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGlobalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getApprovalHistoryRootTaskOfJoinMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDebugLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback addExeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback addWarningLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getProcessListOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkDiskIsConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePassword2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createROProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelROProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPOProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContractProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback createChangeManagementProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProcessCustomOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskFormDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback completeWebServiceTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback suspendWebServiceTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllMemberStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskOfMemberStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback SecurityURLEncodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback helloOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AgentflowWebService() {
            this.Url = global::Kedge.ws.Properties.Settings.Default.KedgeWebService_AgentflowWeb_AgentflowWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event clearCacheCompletedEventHandler clearCacheCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event SQLloadValueCompletedEventHandler SQLloadValueCompleted;
        
        /// <remarks/>
        public event getPASEProcessOfMemberCompletedEventHandler getPASEProcessOfMemberCompleted;
        
        /// <remarks/>
        public event createProcessCompletedEventHandler createProcessCompleted;
        
        /// <remarks/>
        public event addInfoLogCompletedEventHandler addInfoLogCompleted;
        
        /// <remarks/>
        public event getSubTaskListCompletedEventHandler getSubTaskListCompleted;
        
        /// <remarks/>
        public event addErrLogCompletedEventHandler addErrLogCompleted;
        
        /// <remarks/>
        public event setGlobalsCompletedEventHandler setGlobalsCompleted;
        
        /// <remarks/>
        public event getServerTimeCompletedEventHandler getServerTimeCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event changePassword1CompletedEventHandler changePassword1Completed;
        
        /// <remarks/>
        public event pickQueueTaskCompletedEventHandler pickQueueTaskCompleted;
        
        /// <remarks/>
        public event bypassTaskCompletedEventHandler bypassTaskCompleted;
        
        /// <remarks/>
        public event forceReassignTaskCompletedEventHandler forceReassignTaskCompleted;
        
        /// <remarks/>
        public event notifyTaskCompletedEventHandler notifyTaskCompleted;
        
        /// <remarks/>
        public event getCompanyCompletedEventHandler getCompanyCompleted;
        
        /// <remarks/>
        public event getAllMemberCompletedEventHandler getAllMemberCompleted;
        
        /// <remarks/>
        public event getMemberCompletedEventHandler getMemberCompleted;
        
        /// <remarks/>
        public event getRootTaskOfJoinMemberCompletedEventHandler getRootTaskOfJoinMemberCompleted;
        
        /// <remarks/>
        public event getTaskOfMemberCompletedEventHandler getTaskOfMemberCompleted;
        
        /// <remarks/>
        public event getTaskOfRootTaskCompletedEventHandler getTaskOfRootTaskCompleted;
        
        /// <remarks/>
        public event resetDeputyAndDeputyStateCompletedEventHandler resetDeputyAndDeputyStateCompleted;
        
        /// <remarks/>
        public event resetMemberDelegationCompletedEventHandler resetMemberDelegationCompleted;
        
        /// <remarks/>
        public event getGlobalsCompletedEventHandler getGlobalsCompleted;
        
        /// <remarks/>
        public event deleteGlobalsCompletedEventHandler deleteGlobalsCompleted;
        
        /// <remarks/>
        public event getApprovalHistoryRootTaskOfJoinMemberCompletedEventHandler getApprovalHistoryRootTaskOfJoinMemberCompleted;
        
        /// <remarks/>
        public event addDebugLogCompletedEventHandler addDebugLogCompleted;
        
        /// <remarks/>
        public event addExeLogCompletedEventHandler addExeLogCompleted;
        
        /// <remarks/>
        public event addWarningLogCompletedEventHandler addWarningLogCompleted;
        
        /// <remarks/>
        public event getProcessListCompletedEventHandler getProcessListCompleted;
        
        /// <remarks/>
        public event chkDiskIsConnectedCompletedEventHandler chkDiskIsConnectedCompleted;
        
        /// <remarks/>
        public event changePassword2CompletedEventHandler changePassword2Completed;
        
        /// <remarks/>
        public event createROProcessCompletedEventHandler createROProcessCompleted;
        
        /// <remarks/>
        public event cancelROProcessCompletedEventHandler cancelROProcessCompleted;
        
        /// <remarks/>
        public event createPOProcessCompletedEventHandler createPOProcessCompleted;
        
        /// <remarks/>
        public event createContractProcessCompletedEventHandler createContractProcessCompleted;
        
        /// <remarks/>
        public event createChangeManagementProcessCompletedEventHandler createChangeManagementProcessCompleted;
        
        /// <remarks/>
        public event createProcessCustomCompletedEventHandler createProcessCustomCompleted;
        
        /// <remarks/>
        public event getTaskInfoCompletedEventHandler getTaskInfoCompleted;
        
        /// <remarks/>
        public event getTaskFormDataCompletedEventHandler getTaskFormDataCompleted;
        
        /// <remarks/>
        public event completeWebServiceTaskCompletedEventHandler completeWebServiceTaskCompleted;
        
        /// <remarks/>
        public event suspendWebServiceTaskCompletedEventHandler suspendWebServiceTaskCompleted;
        
        /// <remarks/>
        public event getAllMemberStrCompletedEventHandler getAllMemberStrCompleted;
        
        /// <remarks/>
        public event getTaskOfMemberStrCompletedEventHandler getTaskOfMemberStrCompleted;
        
        /// <remarks/>
        public event SecurityURLEncodeCompletedEventHandler SecurityURLEncodeCompleted;
        
        /// <remarks/>
        public event helloCompletedEventHandler helloCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void clearCache() {
            this.Invoke("clearCache", new object[0]);
        }
        
        /// <remarks/>
        public void clearCacheAsync() {
            this.clearCacheAsync(null);
        }
        
        /// <remarks/>
        public void clearCacheAsync(object userState) {
            if ((this.clearCacheOperationCompleted == null)) {
                this.clearCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearCacheOperationCompleted);
            }
            this.InvokeAsync("clearCache", new object[0], this.clearCacheOperationCompleted, userState);
        }
        
        private void OnclearCacheOperationCompleted(object arg) {
            if ((this.clearCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearCacheCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public object[] login(string user, string pass) {
            object[] results = this.Invoke("login", new object[] {
                        user,
                        pass});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string user, string pass) {
            this.loginAsync(user, pass, null);
        }
        
        /// <remarks/>
        public void loginAsync(string user, string pass, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        user,
                        pass}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("SQLloadValueReturn")]
        public object[] SQLloadValue(string sql) {
            object[] results = this.Invoke("SQLloadValue", new object[] {
                        sql});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void SQLloadValueAsync(string sql) {
            this.SQLloadValueAsync(sql, null);
        }
        
        /// <remarks/>
        public void SQLloadValueAsync(string sql, object userState) {
            if ((this.SQLloadValueOperationCompleted == null)) {
                this.SQLloadValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSQLloadValueOperationCompleted);
            }
            this.InvokeAsync("SQLloadValue", new object[] {
                        sql}, this.SQLloadValueOperationCompleted, userState);
        }
        
        private void OnSQLloadValueOperationCompleted(object arg) {
            if ((this.SQLloadValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SQLloadValueCompleted(this, new SQLloadValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPASEProcessOfMemberReturn")]
        public object[] getPASEProcessOfMember(string memid) {
            object[] results = this.Invoke("getPASEProcessOfMember", new object[] {
                        memid});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getPASEProcessOfMemberAsync(string memid) {
            this.getPASEProcessOfMemberAsync(memid, null);
        }
        
        /// <remarks/>
        public void getPASEProcessOfMemberAsync(string memid, object userState) {
            if ((this.getPASEProcessOfMemberOperationCompleted == null)) {
                this.getPASEProcessOfMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPASEProcessOfMemberOperationCompleted);
            }
            this.InvokeAsync("getPASEProcessOfMember", new object[] {
                        memid}, this.getPASEProcessOfMemberOperationCompleted, userState);
        }
        
        private void OngetPASEProcessOfMemberOperationCompleted(object arg) {
            if ((this.getPASEProcessOfMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPASEProcessOfMemberCompleted(this, new getPASEProcessOfMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProcessReturn")]
        public string createProcess(string memID, string proID, object[] args) {
            object[] results = this.Invoke("createProcess", new object[] {
                        memID,
                        proID,
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createProcessAsync(string memID, string proID, object[] args) {
            this.createProcessAsync(memID, proID, args, null);
        }
        
        /// <remarks/>
        public void createProcessAsync(string memID, string proID, object[] args, object userState) {
            if ((this.createProcessOperationCompleted == null)) {
                this.createProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProcessOperationCompleted);
            }
            this.InvokeAsync("createProcess", new object[] {
                        memID,
                        proID,
                        args}, this.createProcessOperationCompleted, userState);
        }
        
        private void OncreateProcessOperationCompleted(object arg) {
            if ((this.createProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProcessCompleted(this, new createProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void addInfoLog(string msg) {
            this.Invoke("addInfoLog", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void addInfoLogAsync(string msg) {
            this.addInfoLogAsync(msg, null);
        }
        
        /// <remarks/>
        public void addInfoLogAsync(string msg, object userState) {
            if ((this.addInfoLogOperationCompleted == null)) {
                this.addInfoLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddInfoLogOperationCompleted);
            }
            this.InvokeAsync("addInfoLog", new object[] {
                        msg}, this.addInfoLogOperationCompleted, userState);
        }
        
        private void OnaddInfoLogOperationCompleted(object arg) {
            if ((this.addInfoLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addInfoLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSubTaskListReturn")]
        public object[] getSubTaskList(string parentID) {
            object[] results = this.Invoke("getSubTaskList", new object[] {
                        parentID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getSubTaskListAsync(string parentID) {
            this.getSubTaskListAsync(parentID, null);
        }
        
        /// <remarks/>
        public void getSubTaskListAsync(string parentID, object userState) {
            if ((this.getSubTaskListOperationCompleted == null)) {
                this.getSubTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubTaskListOperationCompleted);
            }
            this.InvokeAsync("getSubTaskList", new object[] {
                        parentID}, this.getSubTaskListOperationCompleted, userState);
        }
        
        private void OngetSubTaskListOperationCompleted(object arg) {
            if ((this.getSubTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubTaskListCompleted(this, new getSubTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void addErrLog(string msg) {
            this.Invoke("addErrLog", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void addErrLogAsync(string msg) {
            this.addErrLogAsync(msg, null);
        }
        
        /// <remarks/>
        public void addErrLogAsync(string msg, object userState) {
            if ((this.addErrLogOperationCompleted == null)) {
                this.addErrLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddErrLogOperationCompleted);
            }
            this.InvokeAsync("addErrLog", new object[] {
                        msg}, this.addErrLogOperationCompleted, userState);
        }
        
        private void OnaddErrLogOperationCompleted(object arg) {
            if ((this.addErrLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addErrLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void setGlobals(string rootTaskID, object[] args) {
            this.Invoke("setGlobals", new object[] {
                        rootTaskID,
                        args});
        }
        
        /// <remarks/>
        public void setGlobalsAsync(string rootTaskID, object[] args) {
            this.setGlobalsAsync(rootTaskID, args, null);
        }
        
        /// <remarks/>
        public void setGlobalsAsync(string rootTaskID, object[] args, object userState) {
            if ((this.setGlobalsOperationCompleted == null)) {
                this.setGlobalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetGlobalsOperationCompleted);
            }
            this.InvokeAsync("setGlobals", new object[] {
                        rootTaskID,
                        args}, this.setGlobalsOperationCompleted, userState);
        }
        
        private void OnsetGlobalsOperationCompleted(object arg) {
            if ((this.setGlobalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setGlobalsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getServerTimeReturn")]
        public long getServerTime() {
            object[] results = this.Invoke("getServerTime", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void getServerTimeAsync() {
            this.getServerTimeAsync(null);
        }
        
        /// <remarks/>
        public void getServerTimeAsync(object userState) {
            if ((this.getServerTimeOperationCompleted == null)) {
                this.getServerTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerTimeOperationCompleted);
            }
            this.InvokeAsync("getServerTime", new object[0], this.getServerTimeOperationCompleted, userState);
        }
        
        private void OngetServerTimeOperationCompleted(object arg) {
            if ((this.getServerTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getServerTimeCompleted(this, new getServerTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void logout(string user) {
            this.Invoke("logout", new object[] {
                        user});
        }
        
        /// <remarks/>
        public void logoutAsync(string user) {
            this.logoutAsync(user, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string user, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        user}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("changePasswordReturn")]
        public bool changePassword([System.Xml.Serialization.SoapElementAttribute("login")] string login1, string pass) {
            object[] results = this.Invoke("changePassword", new object[] {
                        login1,
                        pass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string login1, string pass) {
            this.changePasswordAsync(login1, pass, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string login1, string pass, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        login1,
                        pass}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="changePassword1")]
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("changePasswordReturn")]
        public bool changePassword([System.Xml.Serialization.SoapElementAttribute("login")] string login1, string oldPass, string newPass) {
            object[] results = this.Invoke("changePassword1", new object[] {
                        login1,
                        oldPass,
                        newPass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void changePassword1Async(string login1, string oldPass, string newPass) {
            this.changePassword1Async(login1, oldPass, newPass, null);
        }
        
        /// <remarks/>
        public void changePassword1Async(string login1, string oldPass, string newPass, object userState) {
            if ((this.changePassword1OperationCompleted == null)) {
                this.changePassword1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePassword1OperationCompleted);
            }
            this.InvokeAsync("changePassword1", new object[] {
                        login1,
                        oldPass,
                        newPass}, this.changePassword1OperationCompleted, userState);
        }
        
        private void OnchangePassword1OperationCompleted(object arg) {
            if ((this.changePassword1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePassword1Completed(this, new changePassword1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void pickQueueTask(string taskID) {
            this.Invoke("pickQueueTask", new object[] {
                        taskID});
        }
        
        /// <remarks/>
        public void pickQueueTaskAsync(string taskID) {
            this.pickQueueTaskAsync(taskID, null);
        }
        
        /// <remarks/>
        public void pickQueueTaskAsync(string taskID, object userState) {
            if ((this.pickQueueTaskOperationCompleted == null)) {
                this.pickQueueTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpickQueueTaskOperationCompleted);
            }
            this.InvokeAsync("pickQueueTask", new object[] {
                        taskID}, this.pickQueueTaskOperationCompleted, userState);
        }
        
        private void OnpickQueueTaskOperationCompleted(object arg) {
            if ((this.pickQueueTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pickQueueTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("bypassTaskReturn")]
        public bool bypassTask(string taskid, string astid) {
            object[] results = this.Invoke("bypassTask", new object[] {
                        taskid,
                        astid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void bypassTaskAsync(string taskid, string astid) {
            this.bypassTaskAsync(taskid, astid, null);
        }
        
        /// <remarks/>
        public void bypassTaskAsync(string taskid, string astid, object userState) {
            if ((this.bypassTaskOperationCompleted == null)) {
                this.bypassTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbypassTaskOperationCompleted);
            }
            this.InvokeAsync("bypassTask", new object[] {
                        taskid,
                        astid}, this.bypassTaskOperationCompleted, userState);
        }
        
        private void OnbypassTaskOperationCompleted(object arg) {
            if ((this.bypassTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.bypassTaskCompleted(this, new bypassTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("forceReassignTaskReturn")]
        public bool forceReassignTask(string p_TaskID, string p_MemID) {
            object[] results = this.Invoke("forceReassignTask", new object[] {
                        p_TaskID,
                        p_MemID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void forceReassignTaskAsync(string p_TaskID, string p_MemID) {
            this.forceReassignTaskAsync(p_TaskID, p_MemID, null);
        }
        
        /// <remarks/>
        public void forceReassignTaskAsync(string p_TaskID, string p_MemID, object userState) {
            if ((this.forceReassignTaskOperationCompleted == null)) {
                this.forceReassignTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnforceReassignTaskOperationCompleted);
            }
            this.InvokeAsync("forceReassignTask", new object[] {
                        p_TaskID,
                        p_MemID}, this.forceReassignTaskOperationCompleted, userState);
        }
        
        private void OnforceReassignTaskOperationCompleted(object arg) {
            if ((this.forceReassignTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.forceReassignTaskCompleted(this, new forceReassignTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void notifyTask(string tskID) {
            this.Invoke("notifyTask", new object[] {
                        tskID});
        }
        
        /// <remarks/>
        public void notifyTaskAsync(string tskID) {
            this.notifyTaskAsync(tskID, null);
        }
        
        /// <remarks/>
        public void notifyTaskAsync(string tskID, object userState) {
            if ((this.notifyTaskOperationCompleted == null)) {
                this.notifyTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnotifyTaskOperationCompleted);
            }
            this.InvokeAsync("notifyTask", new object[] {
                        tskID}, this.notifyTaskOperationCompleted, userState);
        }
        
        private void OnnotifyTaskOperationCompleted(object arg) {
            if ((this.notifyTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.notifyTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCompanyReturn")]
        public string getCompany() {
            object[] results = this.Invoke("getCompany", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyAsync() {
            this.getCompanyAsync(null);
        }
        
        /// <remarks/>
        public void getCompanyAsync(object userState) {
            if ((this.getCompanyOperationCompleted == null)) {
                this.getCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyOperationCompleted);
            }
            this.InvokeAsync("getCompany", new object[0], this.getCompanyOperationCompleted, userState);
        }
        
        private void OngetCompanyOperationCompleted(object arg) {
            if ((this.getCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyCompleted(this, new getCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllMemberReturn")]
        public object[] getAllMember() {
            object[] results = this.Invoke("getAllMember", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllMemberAsync() {
            this.getAllMemberAsync(null);
        }
        
        /// <remarks/>
        public void getAllMemberAsync(object userState) {
            if ((this.getAllMemberOperationCompleted == null)) {
                this.getAllMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMemberOperationCompleted);
            }
            this.InvokeAsync("getAllMember", new object[0], this.getAllMemberOperationCompleted, userState);
        }
        
        private void OngetAllMemberOperationCompleted(object arg) {
            if ((this.getAllMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllMemberCompleted(this, new getAllMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getMemberReturn")]
        public object[] getMember(string memid) {
            object[] results = this.Invoke("getMember", new object[] {
                        memid});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getMemberAsync(string memid) {
            this.getMemberAsync(memid, null);
        }
        
        /// <remarks/>
        public void getMemberAsync(string memid, object userState) {
            if ((this.getMemberOperationCompleted == null)) {
                this.getMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMemberOperationCompleted);
            }
            this.InvokeAsync("getMember", new object[] {
                        memid}, this.getMemberOperationCompleted, userState);
        }
        
        private void OngetMemberOperationCompleted(object arg) {
            if ((this.getMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMemberCompleted(this, new getMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRootTaskOfJoinMemberReturn")]
        public object[] getRootTaskOfJoinMember(string mID) {
            object[] results = this.Invoke("getRootTaskOfJoinMember", new object[] {
                        mID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getRootTaskOfJoinMemberAsync(string mID) {
            this.getRootTaskOfJoinMemberAsync(mID, null);
        }
        
        /// <remarks/>
        public void getRootTaskOfJoinMemberAsync(string mID, object userState) {
            if ((this.getRootTaskOfJoinMemberOperationCompleted == null)) {
                this.getRootTaskOfJoinMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRootTaskOfJoinMemberOperationCompleted);
            }
            this.InvokeAsync("getRootTaskOfJoinMember", new object[] {
                        mID}, this.getRootTaskOfJoinMemberOperationCompleted, userState);
        }
        
        private void OngetRootTaskOfJoinMemberOperationCompleted(object arg) {
            if ((this.getRootTaskOfJoinMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRootTaskOfJoinMemberCompleted(this, new getRootTaskOfJoinMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskOfMemberReturn")]
        public object[] getTaskOfMember(string memID) {
            object[] results = this.Invoke("getTaskOfMember", new object[] {
                        memID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskOfMemberAsync(string memID) {
            this.getTaskOfMemberAsync(memID, null);
        }
        
        /// <remarks/>
        public void getTaskOfMemberAsync(string memID, object userState) {
            if ((this.getTaskOfMemberOperationCompleted == null)) {
                this.getTaskOfMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskOfMemberOperationCompleted);
            }
            this.InvokeAsync("getTaskOfMember", new object[] {
                        memID}, this.getTaskOfMemberOperationCompleted, userState);
        }
        
        private void OngetTaskOfMemberOperationCompleted(object arg) {
            if ((this.getTaskOfMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskOfMemberCompleted(this, new getTaskOfMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskOfRootTaskReturn")]
        public string getTaskOfRootTask(string rootID) {
            object[] results = this.Invoke("getTaskOfRootTask", new object[] {
                        rootID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskOfRootTaskAsync(string rootID) {
            this.getTaskOfRootTaskAsync(rootID, null);
        }
        
        /// <remarks/>
        public void getTaskOfRootTaskAsync(string rootID, object userState) {
            if ((this.getTaskOfRootTaskOperationCompleted == null)) {
                this.getTaskOfRootTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskOfRootTaskOperationCompleted);
            }
            this.InvokeAsync("getTaskOfRootTask", new object[] {
                        rootID}, this.getTaskOfRootTaskOperationCompleted, userState);
        }
        
        private void OngetTaskOfRootTaskOperationCompleted(object arg) {
            if ((this.getTaskOfRootTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskOfRootTaskCompleted(this, new getTaskOfRootTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("resetDeputyAndDeputyStateReturn")]
        public bool resetDeputyAndDeputyState(string myMemid, string deputyMemid, bool deputyState) {
            object[] results = this.Invoke("resetDeputyAndDeputyState", new object[] {
                        myMemid,
                        deputyMemid,
                        deputyState});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void resetDeputyAndDeputyStateAsync(string myMemid, string deputyMemid, bool deputyState) {
            this.resetDeputyAndDeputyStateAsync(myMemid, deputyMemid, deputyState, null);
        }
        
        /// <remarks/>
        public void resetDeputyAndDeputyStateAsync(string myMemid, string deputyMemid, bool deputyState, object userState) {
            if ((this.resetDeputyAndDeputyStateOperationCompleted == null)) {
                this.resetDeputyAndDeputyStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetDeputyAndDeputyStateOperationCompleted);
            }
            this.InvokeAsync("resetDeputyAndDeputyState", new object[] {
                        myMemid,
                        deputyMemid,
                        deputyState}, this.resetDeputyAndDeputyStateOperationCompleted, userState);
        }
        
        private void OnresetDeputyAndDeputyStateOperationCompleted(object arg) {
            if ((this.resetDeputyAndDeputyStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetDeputyAndDeputyStateCompleted(this, new resetDeputyAndDeputyStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("resetMemberDelegationReturn")]
        public bool resetMemberDelegation(string memid) {
            object[] results = this.Invoke("resetMemberDelegation", new object[] {
                        memid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void resetMemberDelegationAsync(string memid) {
            this.resetMemberDelegationAsync(memid, null);
        }
        
        /// <remarks/>
        public void resetMemberDelegationAsync(string memid, object userState) {
            if ((this.resetMemberDelegationOperationCompleted == null)) {
                this.resetMemberDelegationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetMemberDelegationOperationCompleted);
            }
            this.InvokeAsync("resetMemberDelegation", new object[] {
                        memid}, this.resetMemberDelegationOperationCompleted, userState);
        }
        
        private void OnresetMemberDelegationOperationCompleted(object arg) {
            if ((this.resetMemberDelegationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetMemberDelegationCompleted(this, new resetMemberDelegationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getGlobalsReturn")]
        public object[] getGlobals(string rootTaskID) {
            object[] results = this.Invoke("getGlobals", new object[] {
                        rootTaskID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getGlobalsAsync(string rootTaskID) {
            this.getGlobalsAsync(rootTaskID, null);
        }
        
        /// <remarks/>
        public void getGlobalsAsync(string rootTaskID, object userState) {
            if ((this.getGlobalsOperationCompleted == null)) {
                this.getGlobalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGlobalsOperationCompleted);
            }
            this.InvokeAsync("getGlobals", new object[] {
                        rootTaskID}, this.getGlobalsOperationCompleted, userState);
        }
        
        private void OngetGlobalsOperationCompleted(object arg) {
            if ((this.getGlobalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getGlobalsCompleted(this, new getGlobalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteGlobalsReturn")]
        public bool deleteGlobals(string rootTaskID) {
            object[] results = this.Invoke("deleteGlobals", new object[] {
                        rootTaskID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGlobalsAsync(string rootTaskID) {
            this.deleteGlobalsAsync(rootTaskID, null);
        }
        
        /// <remarks/>
        public void deleteGlobalsAsync(string rootTaskID, object userState) {
            if ((this.deleteGlobalsOperationCompleted == null)) {
                this.deleteGlobalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGlobalsOperationCompleted);
            }
            this.InvokeAsync("deleteGlobals", new object[] {
                        rootTaskID}, this.deleteGlobalsOperationCompleted, userState);
        }
        
        private void OndeleteGlobalsOperationCompleted(object arg) {
            if ((this.deleteGlobalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGlobalsCompleted(this, new deleteGlobalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getApprovalHistoryRootTaskOfJoinMemberReturn")]
        public object[] getApprovalHistoryRootTaskOfJoinMember(string mbrID) {
            object[] results = this.Invoke("getApprovalHistoryRootTaskOfJoinMember", new object[] {
                        mbrID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getApprovalHistoryRootTaskOfJoinMemberAsync(string mbrID) {
            this.getApprovalHistoryRootTaskOfJoinMemberAsync(mbrID, null);
        }
        
        /// <remarks/>
        public void getApprovalHistoryRootTaskOfJoinMemberAsync(string mbrID, object userState) {
            if ((this.getApprovalHistoryRootTaskOfJoinMemberOperationCompleted == null)) {
                this.getApprovalHistoryRootTaskOfJoinMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetApprovalHistoryRootTaskOfJoinMemberOperationCompleted);
            }
            this.InvokeAsync("getApprovalHistoryRootTaskOfJoinMember", new object[] {
                        mbrID}, this.getApprovalHistoryRootTaskOfJoinMemberOperationCompleted, userState);
        }
        
        private void OngetApprovalHistoryRootTaskOfJoinMemberOperationCompleted(object arg) {
            if ((this.getApprovalHistoryRootTaskOfJoinMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getApprovalHistoryRootTaskOfJoinMemberCompleted(this, new getApprovalHistoryRootTaskOfJoinMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void addDebugLog(string msg) {
            this.Invoke("addDebugLog", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void addDebugLogAsync(string msg) {
            this.addDebugLogAsync(msg, null);
        }
        
        /// <remarks/>
        public void addDebugLogAsync(string msg, object userState) {
            if ((this.addDebugLogOperationCompleted == null)) {
                this.addDebugLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDebugLogOperationCompleted);
            }
            this.InvokeAsync("addDebugLog", new object[] {
                        msg}, this.addDebugLogOperationCompleted, userState);
        }
        
        private void OnaddDebugLogOperationCompleted(object arg) {
            if ((this.addDebugLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDebugLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void addExeLog(string msg) {
            this.Invoke("addExeLog", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void addExeLogAsync(string msg) {
            this.addExeLogAsync(msg, null);
        }
        
        /// <remarks/>
        public void addExeLogAsync(string msg, object userState) {
            if ((this.addExeLogOperationCompleted == null)) {
                this.addExeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddExeLogOperationCompleted);
            }
            this.InvokeAsync("addExeLog", new object[] {
                        msg}, this.addExeLogOperationCompleted, userState);
        }
        
        private void OnaddExeLogOperationCompleted(object arg) {
            if ((this.addExeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addExeLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        public void addWarningLog(string msg) {
            this.Invoke("addWarningLog", new object[] {
                        msg});
        }
        
        /// <remarks/>
        public void addWarningLogAsync(string msg) {
            this.addWarningLogAsync(msg, null);
        }
        
        /// <remarks/>
        public void addWarningLogAsync(string msg, object userState) {
            if ((this.addWarningLogOperationCompleted == null)) {
                this.addWarningLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddWarningLogOperationCompleted);
            }
            this.InvokeAsync("addWarningLog", new object[] {
                        msg}, this.addWarningLogOperationCompleted, userState);
        }
        
        private void OnaddWarningLogOperationCompleted(object arg) {
            if ((this.addWarningLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addWarningLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getProcessListReturn")]
        public string[] getProcessList() {
            object[] results = this.Invoke("getProcessList", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getProcessListAsync() {
            this.getProcessListAsync(null);
        }
        
        /// <remarks/>
        public void getProcessListAsync(object userState) {
            if ((this.getProcessListOperationCompleted == null)) {
                this.getProcessListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetProcessListOperationCompleted);
            }
            this.InvokeAsync("getProcessList", new object[0], this.getProcessListOperationCompleted, userState);
        }
        
        private void OngetProcessListOperationCompleted(object arg) {
            if ((this.getProcessListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getProcessListCompleted(this, new getProcessListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("chkDiskIsConnectedReturn")]
        public bool chkDiskIsConnected(string path) {
            object[] results = this.Invoke("chkDiskIsConnected", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkDiskIsConnectedAsync(string path) {
            this.chkDiskIsConnectedAsync(path, null);
        }
        
        /// <remarks/>
        public void chkDiskIsConnectedAsync(string path, object userState) {
            if ((this.chkDiskIsConnectedOperationCompleted == null)) {
                this.chkDiskIsConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkDiskIsConnectedOperationCompleted);
            }
            this.InvokeAsync("chkDiskIsConnected", new object[] {
                        path}, this.chkDiskIsConnectedOperationCompleted, userState);
        }
        
        private void OnchkDiskIsConnectedOperationCompleted(object arg) {
            if ((this.chkDiskIsConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkDiskIsConnectedCompleted(this, new chkDiskIsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("changePassword2Return")]
        public bool changePassword2([System.Xml.Serialization.SoapElementAttribute("login")] string login1, string oldPass, string newPass) {
            object[] results = this.Invoke("changePassword2", new object[] {
                        login1,
                        oldPass,
                        newPass});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void changePassword2Async(string login1, string oldPass, string newPass) {
            this.changePassword2Async(login1, oldPass, newPass, null);
        }
        
        /// <remarks/>
        public void changePassword2Async(string login1, string oldPass, string newPass, object userState) {
            if ((this.changePassword2OperationCompleted == null)) {
                this.changePassword2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePassword2OperationCompleted);
            }
            this.InvokeAsync("changePassword2", new object[] {
                        login1,
                        oldPass,
                        newPass}, this.changePassword2OperationCompleted, userState);
        }
        
        private void OnchangePassword2OperationCompleted(object arg) {
            if ((this.changePassword2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePassword2Completed(this, new changePassword2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createROProcessReturn")]
        public string createROProcess(string loginID, string caseNO) {
            object[] results = this.Invoke("createROProcess", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createROProcessAsync(string loginID, string caseNO) {
            this.createROProcessAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createROProcessAsync(string loginID, string caseNO, object userState) {
            if ((this.createROProcessOperationCompleted == null)) {
                this.createROProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateROProcessOperationCompleted);
            }
            this.InvokeAsync("createROProcess", new object[] {
                        loginID,
                        caseNO}, this.createROProcessOperationCompleted, userState);
        }
        
        private void OncreateROProcessOperationCompleted(object arg) {
            if ((this.createROProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createROProcessCompleted(this, new createROProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelROProcessReturn")]
        public string cancelROProcess(string loginID, string caseNO, string msg) {
            object[] results = this.Invoke("cancelROProcess", new object[] {
                        loginID,
                        caseNO,
                        msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelROProcessAsync(string loginID, string caseNO, string msg) {
            this.cancelROProcessAsync(loginID, caseNO, msg, null);
        }
        
        /// <remarks/>
        public void cancelROProcessAsync(string loginID, string caseNO, string msg, object userState) {
            if ((this.cancelROProcessOperationCompleted == null)) {
                this.cancelROProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelROProcessOperationCompleted);
            }
            this.InvokeAsync("cancelROProcess", new object[] {
                        loginID,
                        caseNO,
                        msg}, this.cancelROProcessOperationCompleted, userState);
        }
        
        private void OncancelROProcessOperationCompleted(object arg) {
            if ((this.cancelROProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelROProcessCompleted(this, new cancelROProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createPOProcessReturn")]
        public string createPOProcess(string loginID, string caseNO) {
            object[] results = this.Invoke("createPOProcess", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPOProcessAsync(string loginID, string caseNO) {
            this.createPOProcessAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createPOProcessAsync(string loginID, string caseNO, object userState) {
            if ((this.createPOProcessOperationCompleted == null)) {
                this.createPOProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePOProcessOperationCompleted);
            }
            this.InvokeAsync("createPOProcess", new object[] {
                        loginID,
                        caseNO}, this.createPOProcessOperationCompleted, userState);
        }
        
        private void OncreatePOProcessOperationCompleted(object arg) {
            if ((this.createPOProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPOProcessCompleted(this, new createPOProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createContractProcessReturn")]
        public string createContractProcess(string loginID, string caseNO) {
            object[] results = this.Invoke("createContractProcess", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createContractProcessAsync(string loginID, string caseNO) {
            this.createContractProcessAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createContractProcessAsync(string loginID, string caseNO, object userState) {
            if ((this.createContractProcessOperationCompleted == null)) {
                this.createContractProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContractProcessOperationCompleted);
            }
            this.InvokeAsync("createContractProcess", new object[] {
                        loginID,
                        caseNO}, this.createContractProcessOperationCompleted, userState);
        }
        
        private void OncreateContractProcessOperationCompleted(object arg) {
            if ((this.createContractProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContractProcessCompleted(this, new createContractProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createChangeManagementProcessReturn")]
        public string createChangeManagementProcess(string loginID, string caseNO) {
            object[] results = this.Invoke("createChangeManagementProcess", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createChangeManagementProcessAsync(string loginID, string caseNO) {
            this.createChangeManagementProcessAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createChangeManagementProcessAsync(string loginID, string caseNO, object userState) {
            if ((this.createChangeManagementProcessOperationCompleted == null)) {
                this.createChangeManagementProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateChangeManagementProcessOperationCompleted);
            }
            this.InvokeAsync("createChangeManagementProcess", new object[] {
                        loginID,
                        caseNO}, this.createChangeManagementProcessOperationCompleted, userState);
        }
        
        private void OncreateChangeManagementProcessOperationCompleted(object arg) {
            if ((this.createChangeManagementProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createChangeManagementProcessCompleted(this, new createChangeManagementProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProcessCustomReturn")]
        public string createProcessCustom(string ProID, string loginID, string caseNO) {
            object[] results = this.Invoke("createProcessCustom", new object[] {
                        ProID,
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createProcessCustomAsync(string ProID, string loginID, string caseNO) {
            this.createProcessCustomAsync(ProID, loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createProcessCustomAsync(string ProID, string loginID, string caseNO, object userState) {
            if ((this.createProcessCustomOperationCompleted == null)) {
                this.createProcessCustomOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProcessCustomOperationCompleted);
            }
            this.InvokeAsync("createProcessCustom", new object[] {
                        ProID,
                        loginID,
                        caseNO}, this.createProcessCustomOperationCompleted, userState);
        }
        
        private void OncreateProcessCustomOperationCompleted(object arg) {
            if ((this.createProcessCustomCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProcessCustomCompleted(this, new createProcessCustomCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskInfoReturn")]
        public object[] getTaskInfo(string tskID) {
            object[] results = this.Invoke("getTaskInfo", new object[] {
                        tskID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string tskID) {
            this.getTaskInfoAsync(tskID, null);
        }
        
        /// <remarks/>
        public void getTaskInfoAsync(string tskID, object userState) {
            if ((this.getTaskInfoOperationCompleted == null)) {
                this.getTaskInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskInfoOperationCompleted);
            }
            this.InvokeAsync("getTaskInfo", new object[] {
                        tskID}, this.getTaskInfoOperationCompleted, userState);
        }
        
        private void OngetTaskInfoOperationCompleted(object arg) {
            if ((this.getTaskInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskInfoCompleted(this, new getTaskInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskFormDataReturn")]
        public object[] getTaskFormData(string tskID) {
            object[] results = this.Invoke("getTaskFormData", new object[] {
                        tskID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskFormDataAsync(string tskID) {
            this.getTaskFormDataAsync(tskID, null);
        }
        
        /// <remarks/>
        public void getTaskFormDataAsync(string tskID, object userState) {
            if ((this.getTaskFormDataOperationCompleted == null)) {
                this.getTaskFormDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskFormDataOperationCompleted);
            }
            this.InvokeAsync("getTaskFormData", new object[] {
                        tskID}, this.getTaskFormDataOperationCompleted, userState);
        }
        
        private void OngetTaskFormDataOperationCompleted(object arg) {
            if ((this.getTaskFormDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskFormDataCompleted(this, new getTaskFormDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("completeWebServiceTaskReturn")]
        public string completeWebServiceTask(string taskID, object[] args) {
            object[] results = this.Invoke("completeWebServiceTask", new object[] {
                        taskID,
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void completeWebServiceTaskAsync(string taskID, object[] args) {
            this.completeWebServiceTaskAsync(taskID, args, null);
        }
        
        /// <remarks/>
        public void completeWebServiceTaskAsync(string taskID, object[] args, object userState) {
            if ((this.completeWebServiceTaskOperationCompleted == null)) {
                this.completeWebServiceTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompleteWebServiceTaskOperationCompleted);
            }
            this.InvokeAsync("completeWebServiceTask", new object[] {
                        taskID,
                        args}, this.completeWebServiceTaskOperationCompleted, userState);
        }
        
        private void OncompleteWebServiceTaskOperationCompleted(object arg) {
            if ((this.completeWebServiceTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.completeWebServiceTaskCompleted(this, new completeWebServiceTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("suspendWebServiceTaskReturn")]
        public string suspendWebServiceTask(string taskID, object[] args) {
            object[] results = this.Invoke("suspendWebServiceTask", new object[] {
                        taskID,
                        args});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void suspendWebServiceTaskAsync(string taskID, object[] args) {
            this.suspendWebServiceTaskAsync(taskID, args, null);
        }
        
        /// <remarks/>
        public void suspendWebServiceTaskAsync(string taskID, object[] args, object userState) {
            if ((this.suspendWebServiceTaskOperationCompleted == null)) {
                this.suspendWebServiceTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuspendWebServiceTaskOperationCompleted);
            }
            this.InvokeAsync("suspendWebServiceTask", new object[] {
                        taskID,
                        args}, this.suspendWebServiceTaskOperationCompleted, userState);
        }
        
        private void OnsuspendWebServiceTaskOperationCompleted(object arg) {
            if ((this.suspendWebServiceTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suspendWebServiceTaskCompleted(this, new suspendWebServiceTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllMemberStrReturn")]
        public string[] getAllMemberStr() {
            object[] results = this.Invoke("getAllMemberStr", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllMemberStrAsync() {
            this.getAllMemberStrAsync(null);
        }
        
        /// <remarks/>
        public void getAllMemberStrAsync(object userState) {
            if ((this.getAllMemberStrOperationCompleted == null)) {
                this.getAllMemberStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllMemberStrOperationCompleted);
            }
            this.InvokeAsync("getAllMemberStr", new object[0], this.getAllMemberStrOperationCompleted, userState);
        }
        
        private void OngetAllMemberStrOperationCompleted(object arg) {
            if ((this.getAllMemberStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllMemberStrCompleted(this, new getAllMemberStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskOfMemberStrReturn")]
        public string[] getTaskOfMemberStr(string memID) {
            object[] results = this.Invoke("getTaskOfMemberStr", new object[] {
                        memID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getTaskOfMemberStrAsync(string memID) {
            this.getTaskOfMemberStrAsync(memID, null);
        }
        
        /// <remarks/>
        public void getTaskOfMemberStrAsync(string memID, object userState) {
            if ((this.getTaskOfMemberStrOperationCompleted == null)) {
                this.getTaskOfMemberStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskOfMemberStrOperationCompleted);
            }
            this.InvokeAsync("getTaskOfMemberStr", new object[] {
                        memID}, this.getTaskOfMemberStrOperationCompleted, userState);
        }
        
        private void OngetTaskOfMemberStrOperationCompleted(object arg) {
            if ((this.getTaskOfMemberStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskOfMemberStrCompleted(this, new getTaskOfMemberStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("SecurityURLEncodeReturn")]
        public string SecurityURLEncode(string url) {
            object[] results = this.Invoke("SecurityURLEncode", new object[] {
                        url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SecurityURLEncodeAsync(string url) {
            this.SecurityURLEncodeAsync(url, null);
        }
        
        /// <remarks/>
        public void SecurityURLEncodeAsync(string url, object userState) {
            if ((this.SecurityURLEncodeOperationCompleted == null)) {
                this.SecurityURLEncodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSecurityURLEncodeOperationCompleted);
            }
            this.InvokeAsync("SecurityURLEncode", new object[] {
                        url}, this.SecurityURLEncodeOperationCompleted, userState);
        }
        
        private void OnSecurityURLEncodeOperationCompleted(object arg) {
            if ((this.SecurityURLEncodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SecurityURLEncodeCompleted(this, new SecurityURLEncodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/AgentflowWeb.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("helloReturn")]
        public string hello() {
            object[] results = this.Invoke("hello", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void helloAsync() {
            this.helloAsync(null);
        }
        
        /// <remarks/>
        public void helloAsync(object userState) {
            if ((this.helloOperationCompleted == null)) {
                this.helloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnhelloOperationCompleted);
            }
            this.InvokeAsync("hello", new object[0], this.helloOperationCompleted, userState);
        }
        
        private void OnhelloOperationCompleted(object arg) {
            if ((this.helloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.helloCompleted(this, new helloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void clearCacheCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SQLloadValueCompletedEventHandler(object sender, SQLloadValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SQLloadValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SQLloadValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getPASEProcessOfMemberCompletedEventHandler(object sender, getPASEProcessOfMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPASEProcessOfMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPASEProcessOfMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createProcessCompletedEventHandler(object sender, createProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addInfoLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getSubTaskListCompletedEventHandler(object sender, getSubTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addErrLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void setGlobalsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getServerTimeCompletedEventHandler(object sender, getServerTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void changePassword1CompletedEventHandler(object sender, changePassword1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePassword1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePassword1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void pickQueueTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void bypassTaskCompletedEventHandler(object sender, bypassTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class bypassTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal bypassTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void forceReassignTaskCompletedEventHandler(object sender, forceReassignTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class forceReassignTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal forceReassignTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void notifyTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getCompanyCompletedEventHandler(object sender, getCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllMemberCompletedEventHandler(object sender, getAllMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getMemberCompletedEventHandler(object sender, getMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getRootTaskOfJoinMemberCompletedEventHandler(object sender, getRootTaskOfJoinMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRootTaskOfJoinMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRootTaskOfJoinMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskOfMemberCompletedEventHandler(object sender, getTaskOfMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskOfMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskOfMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskOfRootTaskCompletedEventHandler(object sender, getTaskOfRootTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskOfRootTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskOfRootTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void resetDeputyAndDeputyStateCompletedEventHandler(object sender, resetDeputyAndDeputyStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetDeputyAndDeputyStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetDeputyAndDeputyStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void resetMemberDelegationCompletedEventHandler(object sender, resetMemberDelegationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetMemberDelegationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resetMemberDelegationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getGlobalsCompletedEventHandler(object sender, getGlobalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getGlobalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getGlobalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteGlobalsCompletedEventHandler(object sender, deleteGlobalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGlobalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGlobalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getApprovalHistoryRootTaskOfJoinMemberCompletedEventHandler(object sender, getApprovalHistoryRootTaskOfJoinMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getApprovalHistoryRootTaskOfJoinMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getApprovalHistoryRootTaskOfJoinMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addDebugLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addExeLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addWarningLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getProcessListCompletedEventHandler(object sender, getProcessListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getProcessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getProcessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void chkDiskIsConnectedCompletedEventHandler(object sender, chkDiskIsConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkDiskIsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkDiskIsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void changePassword2CompletedEventHandler(object sender, changePassword2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePassword2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePassword2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createROProcessCompletedEventHandler(object sender, createROProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createROProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createROProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cancelROProcessCompletedEventHandler(object sender, cancelROProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelROProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelROProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createPOProcessCompletedEventHandler(object sender, createPOProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPOProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPOProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createContractProcessCompletedEventHandler(object sender, createContractProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createContractProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createContractProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createChangeManagementProcessCompletedEventHandler(object sender, createChangeManagementProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createChangeManagementProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createChangeManagementProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createProcessCustomCompletedEventHandler(object sender, createProcessCustomCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProcessCustomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProcessCustomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskInfoCompletedEventHandler(object sender, getTaskInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskFormDataCompletedEventHandler(object sender, getTaskFormDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskFormDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskFormDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void completeWebServiceTaskCompletedEventHandler(object sender, completeWebServiceTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class completeWebServiceTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal completeWebServiceTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void suspendWebServiceTaskCompletedEventHandler(object sender, suspendWebServiceTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suspendWebServiceTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suspendWebServiceTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getAllMemberStrCompletedEventHandler(object sender, getAllMemberStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllMemberStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllMemberStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskOfMemberStrCompletedEventHandler(object sender, getTaskOfMemberStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskOfMemberStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskOfMemberStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SecurityURLEncodeCompletedEventHandler(object sender, SecurityURLEncodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SecurityURLEncodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SecurityURLEncodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void helloCompletedEventHandler(object sender, helloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class helloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal helloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591