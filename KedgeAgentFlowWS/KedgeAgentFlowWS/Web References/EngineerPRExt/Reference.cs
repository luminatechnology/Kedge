//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace Kedge.ws.EngineerPRExt {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EngineerPRSoapBinding", Namespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
    public partial class EngineerPRService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getTaskOfRootTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback createROProcessKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createROProcessKedgeURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelROProcessKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPOProcessKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createPOProcessKedgeURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContractProcessKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContractProcessKedgeURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback createChangeManagementProcessKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createChangeManagementProcessKedgeURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback chkDiskIsConnectedOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProcessCustomKedgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createProcessCustomKedgeURLOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EngineerPRService() {
            this.Url = global::Kedge.ws.Properties.Settings.Default.KedgeWebService_EngineerPRExt_EngineerPRService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getTaskOfRootTaskCompletedEventHandler getTaskOfRootTaskCompleted;
        
        /// <remarks/>
        public event createROProcessKedgeCompletedEventHandler createROProcessKedgeCompleted;
        
        /// <remarks/>
        public event createROProcessKedgeURLCompletedEventHandler createROProcessKedgeURLCompleted;
        
        /// <remarks/>
        public event cancelROProcessKedgeCompletedEventHandler cancelROProcessKedgeCompleted;
        
        /// <remarks/>
        public event createPOProcessKedgeCompletedEventHandler createPOProcessKedgeCompleted;
        
        /// <remarks/>
        public event createPOProcessKedgeURLCompletedEventHandler createPOProcessKedgeURLCompleted;
        
        /// <remarks/>
        public event createContractProcessKedgeCompletedEventHandler createContractProcessKedgeCompleted;
        
        /// <remarks/>
        public event createContractProcessKedgeURLCompletedEventHandler createContractProcessKedgeURLCompleted;
        
        /// <remarks/>
        public event createChangeManagementProcessKedgeCompletedEventHandler createChangeManagementProcessKedgeCompleted;
        
        /// <remarks/>
        public event createChangeManagementProcessKedgeURLCompletedEventHandler createChangeManagementProcessKedgeURLCompleted;
        
        /// <remarks/>
        public event chkDiskIsConnectedCompletedEventHandler chkDiskIsConnectedCompleted;
        
        /// <remarks/>
        public event createProcessCustomKedgeCompletedEventHandler createProcessCustomKedgeCompleted;
        
        /// <remarks/>
        public event createProcessCustomKedgeURLCompletedEventHandler createProcessCustomKedgeURLCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTaskOfRootTaskReturn")]
        public string getTaskOfRootTask(string rootID) {
            object[] results = this.Invoke("getTaskOfRootTask", new object[] {
                        rootID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskOfRootTaskAsync(string rootID) {
            this.getTaskOfRootTaskAsync(rootID, null);
        }
        
        /// <remarks/>
        public void getTaskOfRootTaskAsync(string rootID, object userState) {
            if ((this.getTaskOfRootTaskOperationCompleted == null)) {
                this.getTaskOfRootTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskOfRootTaskOperationCompleted);
            }
            this.InvokeAsync("getTaskOfRootTask", new object[] {
                        rootID}, this.getTaskOfRootTaskOperationCompleted, userState);
        }
        
        private void OngetTaskOfRootTaskOperationCompleted(object arg) {
            if ((this.getTaskOfRootTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskOfRootTaskCompleted(this, new getTaskOfRootTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createROProcessKedgeReturn")]
        public string createROProcessKedge(string loginID, string caseNO) {
            object[] results = this.Invoke("createROProcessKedge", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createROProcessKedgeAsync(string loginID, string caseNO) {
            this.createROProcessKedgeAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createROProcessKedgeAsync(string loginID, string caseNO, object userState) {
            if ((this.createROProcessKedgeOperationCompleted == null)) {
                this.createROProcessKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateROProcessKedgeOperationCompleted);
            }
            this.InvokeAsync("createROProcessKedge", new object[] {
                        loginID,
                        caseNO}, this.createROProcessKedgeOperationCompleted, userState);
        }
        
        private void OncreateROProcessKedgeOperationCompleted(object arg) {
            if ((this.createROProcessKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createROProcessKedgeCompleted(this, new createROProcessKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createROProcessKedgeURLReturn")]
        public string createROProcessKedgeURL(string loginID, string caseNO) {
            object[] results = this.Invoke("createROProcessKedgeURL", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createROProcessKedgeURLAsync(string loginID, string caseNO) {
            this.createROProcessKedgeURLAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createROProcessKedgeURLAsync(string loginID, string caseNO, object userState) {
            if ((this.createROProcessKedgeURLOperationCompleted == null)) {
                this.createROProcessKedgeURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateROProcessKedgeURLOperationCompleted);
            }
            this.InvokeAsync("createROProcessKedgeURL", new object[] {
                        loginID,
                        caseNO}, this.createROProcessKedgeURLOperationCompleted, userState);
        }
        
        private void OncreateROProcessKedgeURLOperationCompleted(object arg) {
            if ((this.createROProcessKedgeURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createROProcessKedgeURLCompleted(this, new createROProcessKedgeURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelROProcessKedgeReturn")]
        public string cancelROProcessKedge(string loginID, string caseNO, string msg) {
            object[] results = this.Invoke("cancelROProcessKedge", new object[] {
                        loginID,
                        caseNO,
                        msg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelROProcessKedgeAsync(string loginID, string caseNO, string msg) {
            this.cancelROProcessKedgeAsync(loginID, caseNO, msg, null);
        }
        
        /// <remarks/>
        public void cancelROProcessKedgeAsync(string loginID, string caseNO, string msg, object userState) {
            if ((this.cancelROProcessKedgeOperationCompleted == null)) {
                this.cancelROProcessKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelROProcessKedgeOperationCompleted);
            }
            this.InvokeAsync("cancelROProcessKedge", new object[] {
                        loginID,
                        caseNO,
                        msg}, this.cancelROProcessKedgeOperationCompleted, userState);
        }
        
        private void OncancelROProcessKedgeOperationCompleted(object arg) {
            if ((this.cancelROProcessKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelROProcessKedgeCompleted(this, new cancelROProcessKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createPOProcessKedgeReturn")]
        public string createPOProcessKedge(string loginID, string caseNO) {
            object[] results = this.Invoke("createPOProcessKedge", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPOProcessKedgeAsync(string loginID, string caseNO) {
            this.createPOProcessKedgeAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createPOProcessKedgeAsync(string loginID, string caseNO, object userState) {
            if ((this.createPOProcessKedgeOperationCompleted == null)) {
                this.createPOProcessKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePOProcessKedgeOperationCompleted);
            }
            this.InvokeAsync("createPOProcessKedge", new object[] {
                        loginID,
                        caseNO}, this.createPOProcessKedgeOperationCompleted, userState);
        }
        
        private void OncreatePOProcessKedgeOperationCompleted(object arg) {
            if ((this.createPOProcessKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPOProcessKedgeCompleted(this, new createPOProcessKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createPOProcessKedgeURLReturn")]
        public string createPOProcessKedgeURL(string loginID, string caseNO) {
            object[] results = this.Invoke("createPOProcessKedgeURL", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPOProcessKedgeURLAsync(string loginID, string caseNO) {
            this.createPOProcessKedgeURLAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createPOProcessKedgeURLAsync(string loginID, string caseNO, object userState) {
            if ((this.createPOProcessKedgeURLOperationCompleted == null)) {
                this.createPOProcessKedgeURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePOProcessKedgeURLOperationCompleted);
            }
            this.InvokeAsync("createPOProcessKedgeURL", new object[] {
                        loginID,
                        caseNO}, this.createPOProcessKedgeURLOperationCompleted, userState);
        }
        
        private void OncreatePOProcessKedgeURLOperationCompleted(object arg) {
            if ((this.createPOProcessKedgeURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPOProcessKedgeURLCompleted(this, new createPOProcessKedgeURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createContractProcessKedgeReturn")]
        public string createContractProcessKedge(string loginID, string caseNO) {
            object[] results = this.Invoke("createContractProcessKedge", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createContractProcessKedgeAsync(string loginID, string caseNO) {
            this.createContractProcessKedgeAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createContractProcessKedgeAsync(string loginID, string caseNO, object userState) {
            if ((this.createContractProcessKedgeOperationCompleted == null)) {
                this.createContractProcessKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContractProcessKedgeOperationCompleted);
            }
            this.InvokeAsync("createContractProcessKedge", new object[] {
                        loginID,
                        caseNO}, this.createContractProcessKedgeOperationCompleted, userState);
        }
        
        private void OncreateContractProcessKedgeOperationCompleted(object arg) {
            if ((this.createContractProcessKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContractProcessKedgeCompleted(this, new createContractProcessKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createContractProcessKedgeURLReturn")]
        public string createContractProcessKedgeURL(string loginID, string caseNO) {
            object[] results = this.Invoke("createContractProcessKedgeURL", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createContractProcessKedgeURLAsync(string loginID, string caseNO) {
            this.createContractProcessKedgeURLAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createContractProcessKedgeURLAsync(string loginID, string caseNO, object userState) {
            if ((this.createContractProcessKedgeURLOperationCompleted == null)) {
                this.createContractProcessKedgeURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContractProcessKedgeURLOperationCompleted);
            }
            this.InvokeAsync("createContractProcessKedgeURL", new object[] {
                        loginID,
                        caseNO}, this.createContractProcessKedgeURLOperationCompleted, userState);
        }
        
        private void OncreateContractProcessKedgeURLOperationCompleted(object arg) {
            if ((this.createContractProcessKedgeURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContractProcessKedgeURLCompleted(this, new createContractProcessKedgeURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createChangeManagementProcessKedgeReturn")]
        public string createChangeManagementProcessKedge(string loginID, string caseNO) {
            object[] results = this.Invoke("createChangeManagementProcessKedge", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createChangeManagementProcessKedgeAsync(string loginID, string caseNO) {
            this.createChangeManagementProcessKedgeAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createChangeManagementProcessKedgeAsync(string loginID, string caseNO, object userState) {
            if ((this.createChangeManagementProcessKedgeOperationCompleted == null)) {
                this.createChangeManagementProcessKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateChangeManagementProcessKedgeOperationCompleted);
            }
            this.InvokeAsync("createChangeManagementProcessKedge", new object[] {
                        loginID,
                        caseNO}, this.createChangeManagementProcessKedgeOperationCompleted, userState);
        }
        
        private void OncreateChangeManagementProcessKedgeOperationCompleted(object arg) {
            if ((this.createChangeManagementProcessKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createChangeManagementProcessKedgeCompleted(this, new createChangeManagementProcessKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createChangeManagementProcessKedgeURLReturn")]
        public string createChangeManagementProcessKedgeURL(string loginID, string caseNO) {
            object[] results = this.Invoke("createChangeManagementProcessKedgeURL", new object[] {
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createChangeManagementProcessKedgeURLAsync(string loginID, string caseNO) {
            this.createChangeManagementProcessKedgeURLAsync(loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createChangeManagementProcessKedgeURLAsync(string loginID, string caseNO, object userState) {
            if ((this.createChangeManagementProcessKedgeURLOperationCompleted == null)) {
                this.createChangeManagementProcessKedgeURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateChangeManagementProcessKedgeURLOperationCompleted);
            }
            this.InvokeAsync("createChangeManagementProcessKedgeURL", new object[] {
                        loginID,
                        caseNO}, this.createChangeManagementProcessKedgeURLOperationCompleted, userState);
        }
        
        private void OncreateChangeManagementProcessKedgeURLOperationCompleted(object arg) {
            if ((this.createChangeManagementProcessKedgeURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createChangeManagementProcessKedgeURLCompleted(this, new createChangeManagementProcessKedgeURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("chkDiskIsConnectedReturn")]
        public bool chkDiskIsConnected(string path) {
            object[] results = this.Invoke("chkDiskIsConnected", new object[] {
                        path});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void chkDiskIsConnectedAsync(string path) {
            this.chkDiskIsConnectedAsync(path, null);
        }
        
        /// <remarks/>
        public void chkDiskIsConnectedAsync(string path, object userState) {
            if ((this.chkDiskIsConnectedOperationCompleted == null)) {
                this.chkDiskIsConnectedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchkDiskIsConnectedOperationCompleted);
            }
            this.InvokeAsync("chkDiskIsConnected", new object[] {
                        path}, this.chkDiskIsConnectedOperationCompleted, userState);
        }
        
        private void OnchkDiskIsConnectedOperationCompleted(object arg) {
            if ((this.chkDiskIsConnectedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chkDiskIsConnectedCompleted(this, new chkDiskIsConnectedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProcessCustomKedgeReturn")]
        public string createProcessCustomKedge(string ProID, string loginID, string caseNO) {
            object[] results = this.Invoke("createProcessCustomKedge", new object[] {
                        ProID,
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createProcessCustomKedgeAsync(string ProID, string loginID, string caseNO) {
            this.createProcessCustomKedgeAsync(ProID, loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createProcessCustomKedgeAsync(string ProID, string loginID, string caseNO, object userState) {
            if ((this.createProcessCustomKedgeOperationCompleted == null)) {
                this.createProcessCustomKedgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProcessCustomKedgeOperationCompleted);
            }
            this.InvokeAsync("createProcessCustomKedge", new object[] {
                        ProID,
                        loginID,
                        caseNO}, this.createProcessCustomKedgeOperationCompleted, userState);
        }
        
        private void OncreateProcessCustomKedgeOperationCompleted(object arg) {
            if ((this.createProcessCustomKedgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProcessCustomKedgeCompleted(this, new createProcessCustomKedgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://DefaultNamespace", ResponseNamespace="http://220.130.9.24:8080/WebAgenda/webservice/EngineerPR.jws")]
        [return: System.Xml.Serialization.SoapElementAttribute("createProcessCustomKedgeURLReturn")]
        public string createProcessCustomKedgeURL(string ProID, string loginID, string caseNO) {
            object[] results = this.Invoke("createProcessCustomKedgeURL", new object[] {
                        ProID,
                        loginID,
                        caseNO});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createProcessCustomKedgeURLAsync(string ProID, string loginID, string caseNO) {
            this.createProcessCustomKedgeURLAsync(ProID, loginID, caseNO, null);
        }
        
        /// <remarks/>
        public void createProcessCustomKedgeURLAsync(string ProID, string loginID, string caseNO, object userState) {
            if ((this.createProcessCustomKedgeURLOperationCompleted == null)) {
                this.createProcessCustomKedgeURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateProcessCustomKedgeURLOperationCompleted);
            }
            this.InvokeAsync("createProcessCustomKedgeURL", new object[] {
                        ProID,
                        loginID,
                        caseNO}, this.createProcessCustomKedgeURLOperationCompleted, userState);
        }
        
        private void OncreateProcessCustomKedgeURLOperationCompleted(object arg) {
            if ((this.createProcessCustomKedgeURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createProcessCustomKedgeURLCompleted(this, new createProcessCustomKedgeURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void getTaskOfRootTaskCompletedEventHandler(object sender, getTaskOfRootTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskOfRootTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskOfRootTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createROProcessKedgeCompletedEventHandler(object sender, createROProcessKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createROProcessKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createROProcessKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createROProcessKedgeURLCompletedEventHandler(object sender, createROProcessKedgeURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createROProcessKedgeURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createROProcessKedgeURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void cancelROProcessKedgeCompletedEventHandler(object sender, cancelROProcessKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelROProcessKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelROProcessKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createPOProcessKedgeCompletedEventHandler(object sender, createPOProcessKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPOProcessKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPOProcessKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createPOProcessKedgeURLCompletedEventHandler(object sender, createPOProcessKedgeURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPOProcessKedgeURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPOProcessKedgeURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createContractProcessKedgeCompletedEventHandler(object sender, createContractProcessKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createContractProcessKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createContractProcessKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createContractProcessKedgeURLCompletedEventHandler(object sender, createContractProcessKedgeURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createContractProcessKedgeURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createContractProcessKedgeURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createChangeManagementProcessKedgeCompletedEventHandler(object sender, createChangeManagementProcessKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createChangeManagementProcessKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createChangeManagementProcessKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createChangeManagementProcessKedgeURLCompletedEventHandler(object sender, createChangeManagementProcessKedgeURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createChangeManagementProcessKedgeURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createChangeManagementProcessKedgeURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void chkDiskIsConnectedCompletedEventHandler(object sender, chkDiskIsConnectedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chkDiskIsConnectedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chkDiskIsConnectedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createProcessCustomKedgeCompletedEventHandler(object sender, createProcessCustomKedgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProcessCustomKedgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProcessCustomKedgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void createProcessCustomKedgeURLCompletedEventHandler(object sender, createProcessCustomKedgeURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createProcessCustomKedgeURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createProcessCustomKedgeURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591